AdLint - not used, old for ANSI C89 / ISO C90 and partly ISO C99.
Astrée – finds all potential runtime errors and data races by abstract interpretation, can prove their absence, and can prove functional assertions; tailored towards safety-critical C code (e.g. avionics and automotive). Includes MISRA checker.
Axivion Bauhaus Suite – A static code analysis tool suite that performs various analyses such as architecture checking, interface analyses, MISRA checking, and clone detection.
BLAST – not used, maybe later, analyzing only one .c file, getting parse errors
Cppcheck – Open-source tool that checks for several types of errors, including use of STL.
cpplint – An open-source tool that checks for compliance with Google's style guide for C++ coding.
Clang – found 3 bugs.
Coccinelle – An open-source source code pattern matching and transformation.
Coverity – A static analysis tool for C/C++.
Cppdepend – not used, based on clang, looks good but commercial, unable to start trial version (free for one month).
ECLAIR – A platform for the automatic analysis, verification, testing and transformation of C and C++ programs.
Eclipse (software) – An open-source IDE that includes a static code analyzer.
Flawfinder – used.
Fluctuat – Abstract interpreter for the validation of numerical properties of programs.
Frama-C – An open-source static analysis framework for C.
Goanna – not used, nowadays available as plug-in for eclipse and VS.
GrammaTech CodeSonar – A static program analysis tool for C/C++, see above.
IKOS – an open-source static analysis of C and C++ code.
Iinfer – not used, unable to install, maybe problem with opam dependencies.
Klocwork Static Code Analysis – A static analysis tool for C/C++.
Lint – The original, from 1978, static code analyzer for C.
LDRA Testbed – not used, commercial.
OCLint – Clang based, only runs on Linux and Mac OS X.
Parasoft C/C++test – A C/C++ tool that does static analysis, unit testing, code review, and runtime error detection; plugins available for Visual Studio and Eclipse-based IDEs.
PC-Lint – not used, commercial.
Polyspace – Uses abstract interpretation to detect and prove the absence of run time errors, Dead Code in source code as well as used to check all MISRA (2004, 2012) rules (directives, non directives).
PRQA QA·C and QA·C++ – Deep static analysis of C/C++ for quality assurance and guideline/coding standard enforcement with MISRA support.
SLAM project – not used, commercial.
Sparse – An open-source tool designed to find faults in the Linux kernel.
Splint – An open-source evolved version of Lint, for C.
Visual Studio – An IDE that provides static code analysis for C/C++ both in the editor environment and from the compiler command line.

Martin 3k + 1, Denis 3k + 2, Peto 3k

Source: https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C,_C++
